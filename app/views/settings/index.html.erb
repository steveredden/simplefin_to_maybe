<h1>Settings</h1>

<!-- Simplefin Settings Table -->
<h2>SimpleFIN Settings</h2>
<table>
  <thead>
    <tr>
      <th>Key</th>
      <th>Value</th>
      <th>Action</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>SimpleFIN Username</td>
      <td><%= Setting.find_by(key: 'simplefin_username')&.value %></td>
      <td>
        <%= link_to 'Edit', edit_setting_path(Setting.find_by(key: 'simplefin_username')) %>
      </td>
    </tr>
    <tr>
      <td>SimpleFIN Password</td>
      <td><%= Setting.find_by(key: 'simplefin_password')&.value %></td>
      <td>
        <%= link_to 'Edit', edit_setting_path(Setting.find_by(key: 'simplefin_password')) %>
      </td>
    </tr>
  </tbody>
</table>

<button id="test_simplefin_button">Test SimpleFIN</button>
<img id="loading-spinner" style="display: none;" src="<%= asset_path('fe718d-transparent-spinner.gif') %>" alt="Loading..." class="spinner" />
<div id="simplefin_test_result"></div>

<!-- Database Settings Table -->
<h2>Maybe Settings</h2>
<table>
  <thead>
    <tr>
      <th>Key</th>
      <th>Value</th>
      <th>Action</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Maybe PostgreSQL Host</td>
      <td><%= Setting.find_by(key: 'maybe_postgres_host')&.value %></td>
      <td>
        <%= link_to 'Edit', edit_setting_path(Setting.find_by(key: 'maybe_postgres_host')) %>
      </td>
    </tr>
    <tr>
      <td>Maybe PostgreSQL Port</td>
      <td><%= Setting.find_by(key: 'maybe_postgres_port')&.value %></td>
      <td>
        <%= link_to 'Edit', edit_setting_path(Setting.find_by(key: 'maybe_postgres_port')) %>
      </td>
    </tr>
    <tr>
      <td>Maybe PostgreSQL Database</td>
      <td><%= Setting.find_by(key: 'maybe_postgres_db')&.value %></td>
      <td>
        <%= link_to 'Edit', edit_setting_path(Setting.find_by(key: 'maybe_postgres_db')) %>
      </td>
    </tr>
    <tr>
      <td>Maybe PostgreSQL User</td>
      <td><%= Setting.find_by(key: 'maybe_postgres_user')&.value %></td>
      <td>
        <%= link_to 'Edit', edit_setting_path(Setting.find_by(key: 'maybe_postgres_user')) %>
      </td>
    </tr>
    <tr>
      <td>Maybe PostgreSQL Password</td>
      <td><%= Setting.find_by(key: 'maybe_postgres_password')&.value %></td>
      <td>
        <%= link_to 'Edit', edit_setting_path(Setting.find_by(key: 'maybe_postgres_password')) %>
      </td>
    </tr>
  </tbody>
</table>

<!-- Other Settings Table -->
<h2>Scheduling Settings</h2>
<table>
  <thead>
    <tr>
      <th>Key</th>
      <th>Value</th>
      <th>Action</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Lookback Days</td>
      <td><%= Setting.find_by(key: 'lookback_days')&.value %></td>
      <td>
        <%= link_to 'Edit', edit_setting_path(Setting.find_by(key: 'lookback_days')) %>
      </td>
    </tr>
    <tr>
      <td>Synchronization Schedule</td>
      <td><%= Setting.find_by(key: 'synchronization_schedule')&.value %></td>
      <td>
        <%= link_to 'Edit', edit_setting_path(Setting.find_by(key: 'synchronization_schedule')) %>
      </td>
    </tr>
  </tbody>
</table>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const button = document.getElementById("test_simplefin_button");
    const spinner = document.getElementById("loading-spinner");
    const resultContainer = document.getElementById("simplefin_test_result");

    button.addEventListener("click", function (event) {
      event.preventDefault(); // Prevent default link behavior
      spinner.style.display = "block";  // Show the spinner

      // Make an AJAX request to trigger backend code
      fetch("<%= test_simplefin_path %>", {
        method: "GET",
        headers: { "X-Requested-With": "XMLHttpRequest" }
      })
      .then(response => response.text())
      .then(data => {
        resultContainer.innerText = data;
      })
      .catch(error => {
        console.error("Error:", error);
        resultContainer.innerText = "An error occurred.";
      });
    });

    // MutationObserver: Hide spinner when text changes
    const observer = new MutationObserver((mutationsList) => {
      for (const mutation of mutationsList) {
        if (mutation.type === "childList" || mutation.type === "characterData") {
          spinner.style.display = "none";  // Hide the spinner
        }
      }
    });

    // Start observing `simplefin_test_result` for text changes
    observer.observe(resultContainer, { childList: true, subtree: true, characterData: true });
  });
</script>