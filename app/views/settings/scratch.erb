<script>
  document.addEventListener("DOMContentLoaded", function () {
    const button = document.getElementById("test_simplefin_button");
    const spinner = document.getElementById("loading-spinner");
    const resultContainer = document.getElementById("simplefin_test_result");

    button.addEventListener("click", function (event) {
      event.preventDefault(); // Prevent default link behavior
      spinner.style.display = "block";  // Show the spinner

      // Make an AJAX request to trigger backend code
      fetch("<%= test_simplefin_path %>", {
        method: "GET",
        headers: { "X-Requested-With": "XMLHttpRequest" }
      })
      .then(response => response.text())
      .then(data => {
        resultContainer.innerText = data;
      })
      .catch(error => {
        console.error("Error:", error);
        resultContainer.innerText = "An error occurred.";
      });
    });

    // MutationObserver: Hide spinner when text changes
    const observer = new MutationObserver((mutationsList) => {
      for (const mutation of mutationsList) {
        if (mutation.type === "childList" || mutation.type === "characterData") {
          spinner.style.display = "none";  // Hide the spinner
        }
      }
    });

    // Start observing `simplefin_test_result` for text changes
    observer.observe(resultContainer, { childList: true, subtree: true, characterData: true });
  });
</script>


<script>
  document.getElementById('test_simplefin_button').addEventListener('click', function(event) {
    event.preventDefault(); // Prevent the link from navigating
    document.getElementById("loading-spinner").style.display = "block";

    // Make an AJAX request to trigger backend code
    fetch('<%= test_simplefin_path %>', {
      method: 'GET',
    })
    .then(response => response.text())
    .then(data => {
      document.getElementById('simplefin_test_result').innerText = data;
    })
    .catch(error => {
      console.error('Error:', error);
    });
  });
</script>